name: Publish Doggo

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a testing .env
        run: |
          touch .env
          ENVIRONMENT=development
          POSTGRES_USER=yourUser
          POSTGRES_PASSWORD=changeit
          POSTGRES_DB=prisma
          DATABASE_URL=postgres://yourUser:changeit@postgres:5432/prisma?schema=hello-prisma
          PGADMIN_DEFAULT_EMAIL=your@email.com
          PGADMIN_DEFAULT_PASSWORD=changeit
          SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}
          NEXT_PUBLIC_API_PATH=http://localhost:5000
          FIREBASE_AUTH_EMULATOR_HOST=firebase-emulators:4001
          FIREBASE_STORAGE_EMULATOR_HOST=firebase-emulators:4002

      - name: Run Cypress
        run: |
          npm run test:build

      - name: Find Changed files
        uses: tj-actions/changed-files@v13.1
        id: changed-files

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: Build and push api Docker Image
        if: contains(steps.changed-files.outputs.all_changed_files, 'api')
        uses: docker/build-push-action@v2
        with:
          context: ./api
          push: true
          tags: ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Build and push web Docker Image
        if: contains(steps.changed-files.outputs.all_changed_files, 'web')
        uses: docker/build-push-action@v2
        with:
          context: ./web
          push: true
          tags: ghcr.io/${{github.repository}}/web:${{github.sha}}
          build-args: |
            NEXT_PUBLIC_API_PATH=${{secrets.NEXT_PUBLIC_API_PATH}}
            SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}
            NEXT_PUBLIC_TEST=${{secrets.NEXT_PUBLIC_TEST}}

      - name: Trigger api deployment to Digital Ocean
        if: contains(steps.changed-files.outputs.all_changed_files, 'api')
        uses: appleboy/ssh-action@master
        with:
          host: 143.198.146.197
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image api ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Trigger web deployment to Digital Ocean
        if: contains(steps.changed-files.outputs.all_changed_files, 'web')
        uses: appleboy/ssh-action@master
        with:
          host: 143.198.146.197
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image web ghcr.io/${{github.repository}}/web:${{github.sha}}

      # Just could not get these to work.
      # - name: Delete old api images
      #   uses: actions/delete-package-versions@v2
      #   with:
      #     package-name: "api"
      #     token: ${{secrets.GITHUB_TOKEN}}
      #     min-versions-to-keep: 3

      # - name: Delete old web images
      #   uses: actions/delete-package-versions@v2
      #   with:
      #     package-name: "web"
      #     token: ${{secrets.GITHUB_TOKEN}}
      #     min-versions-to-keep: 3
